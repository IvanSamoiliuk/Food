{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/modules/calc.js","webpack:///./js/modules/cards.js","webpack:///./js/modules/forms.js","webpack:///./js/modules/modal.js","webpack:///./js/modules/slider.js","webpack:///./js/modules/tabs.js","webpack:///./js/modules/timer.js","webpack:///./js/script.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,SAAS;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpJA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAyB,SAAS,OAAO,SAAS;AAClD,gDAAgD,WAAW;AAC3D,8CAA8C,WAAW;AACzD;AACA;AACA;AACA,wDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,mDAAmD;AACzE;AACA,QAAQ;AACR,MAAM;;AAEN;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;;;;;;;;;;;;ACvEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC,IAAI,YAAY,WAAW;AACpE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;;;;;ACvHA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,cAAc;AAC1C,8BAA8B,WAAW;AACzC,GAAG;AACH;AACA,8BAA8B,WAAW;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,iDAAiD,OAAO;;AAExD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,iDAAiD,OAAO;;AAExD;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD,OAAO;;AAE1D;;AAEA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;;;;;;;;;;;;AClMA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;;;;;;;;;;;;AC3CA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AChEA;AACA,eAAe,mBAAO,CAAC,4CAAgB;AACvC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,iBAAiB,mBAAO,CAAC,gDAAkB;AAC3C,eAAe,mBAAO,CAAC,4CAAgB;AACvC,gBAAgB,mBAAO,CAAC,8CAAiB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/script.js\");\n","function calc() {\n  //========================= CALCULATOR\n\n  // элемент с вычисленными данными\n  const result = document.querySelector(\".calculating__result span\");\n\n  // значения по умолчанию для кнопок, выбранных по умолчанию\n  let sex = \"female\";\n  let ratio = 1.375;\n  let height;\n  let weight;\n  let age;\n\n  // если в LS уже есть сохраненные данные, то беру данные оттуда,\n  // если их там нет, то уст-ю знач по умолчанию и сохраняю в LS\n  if (localStorage.getItem(\"sex\")) {\n    sex = localStorage.getItem(\"sex\");\n  } else {\n    sex = \"female\";\n    localStorage.setItem(\"sex\", \"female\");\n  }\n  if (localStorage.getItem(\"ratio\")) {\n    ratio = localStorage.getItem(\"ratio\");\n  } else {\n    ratio = 1.375;\n    localStorage.setItem(\"ratio\", 1.375);\n  }\n\n  // функция, вычисляющая результат на данных формы (статических и динамических)\n  function calcTotal() {\n    // проверка, что есть все данные\n    if (!sex || !height || !weight || !age || !ratio) {\n      result.textContent = \"____\";\n      return;\n    }\n    // вычисление данных (формулы для М и Ж отличаются)\n    // и запись в результирующее поле\n    if (sex === \"female\") {\n      result.textContent = Math.round(\n        (447.6 + 9.2 * weight + 3.1 * height - 4.3 * age) * ratio\n      );\n    } else {\n      result.textContent = Math.round(\n        (88.36 + 13.4 * weight + 4.8 * height - 5.7 * age) * ratio\n      );\n    }\n  }\n  // вызов функции расчета, чтобы изменить то, что в верстке на '_____'\n  calcTotal();\n\n  // функция, уст класс активности выбранным кнопкам на основе данных в LS\n  function initLocalSettings(selector, activeClass) {\n    const elements = document.querySelectorAll(selector);\n\n    elements.forEach((elem) => {\n      elem.classList.remove(activeClass);\n      if (elem.getAttribute(\"id\") === localStorage.getItem(\"sex\")) {\n        elem.classList.add(activeClass);\n      }\n      if (elem.getAttribute(\"data-ratio\") === localStorage.getItem(\"ratio\")) {\n        elem.classList.add(activeClass);\n      }\n    });\n  }\n\n  // устаналиваю подсветку выбранного набора кнопок-значений\n  initLocalSettings(\"#gender div\", \"calculating__choose-item_active\");\n  initLocalSettings(\n    \".calculating__choose_big div\",\n    \"calculating__choose-item_active\"\n  );\n\n  // функция для получения статических с нажатых кнопок (информация в них уже забита)\n  function getStaticInformation(selector, activeClass) {\n    // получаем все кнопки на основе родителя\n    const elements = document.querySelectorAll(`${selector}`);\n\n    // обработчик: если есть атрибут 'data-ratio' (есть только у физ активности),\n    // значит, это элементы из этой группы;\n    // если нет атрибута, значит это группа выбора половой принадлежности\n    elements.forEach((elem) => {\n      elem.addEventListener(\"click\", (e) => {\n        if (e.target.getAttribute(\"data-ratio\")) {\n          ratio = +e.target.getAttribute(\"data-ratio\");\n          // запись данных в LS\n          localStorage.setItem(\"ratio\", +e.target.getAttribute(\"data-ratio\"));\n        } else {\n          sex = e.target.getAttribute(\"id\");\n          // запись данных в LS\n          localStorage.setItem(\"sex\", e.target.getAttribute(\"id\"));\n        }\n\n        // добавляю класс активности (подсветка нажатой кнопки)\n        elements.forEach((elem) => {\n          elem.classList.remove(activeClass);\n        });\n        e.target.classList.add(activeClass);\n\n        // вызов расчетной функции для автообновления результата при смене кнопки\n        calcTotal();\n      });\n    });\n  }\n\n  // для дефолтной подсветки\n  getStaticInformation(\"#gender div\", \"calculating__choose-item_active\");\n  getStaticInformation(\n    \".calculating__choose_big div\",\n    \"calculating__choose-item_active\"\n  );\n\n  // функция для получения динамических данных из полей формы\n  function getDynamicInformation(selector) {\n    // элемент инпута\n    const input = document.querySelector(selector);\n\n    // обработчик выбранного инпута на основе id\n    input.addEventListener(\"input\", () => {\n      // проверка введ данных на присутствие 'не чисел' и подсветка этих полей\n      if (input.value.match(/\\D/g)) {\n        input.style.border = \"1px solid red\";\n      } else {\n        input.style.border = \"none\";\n      }\n      switch (input.getAttribute(\"id\")) {\n        // присваиваем переменным для расчета значение из поля ввода\n        case \"height\":\n          height = +input.value;\n          break;\n        case \"weight\":\n          weight = +input.value;\n          break;\n        case \"age\":\n          age = +input.value;\n          break;\n      }\n\n      // пересчет данных после ввода\n      calcTotal();\n    });\n  }\n\n  // запуск работы функций\n  getDynamicInformation(\"#height\");\n  getDynamicInformation(\"#weight\");\n  getDynamicInformation(\"#age\");\n}\n\nmodule.exports = calc;\n","function cards() {\n  //====================== CARDS\n\n  // конструктор класса для создания карточек меню\n  class MenuCard {\n    constructor(src, alt, title, descr, price, parentSelector, ...classes) {\n      this.src = src;\n      this.alt = alt;\n      this.title = title;\n      this.descr = descr;\n      this.price = price;\n      this.parent = document.querySelector(parentSelector);\n      this.classes = classes;\n      this.transfer = 27;\n      this.changeToUAH();\n    }\n\n    // функция, конвертирующая долларовую цену в гривны\n    changeToUAH() {\n      this.price = this.price * this.transfer;\n    }\n\n    // функция отображения карточки меню на странице\n    render() {\n      const element = document.createElement(\"div\");\n\n      // если массив classes пустой или в нем нет класса по умолчанию (\"menu__item\"),\n      // то добавляю этот класс в массив classes\n      if (!this.classes.includes(\"menu__item\")) {\n        this.classes.push(\"menu__item\");\n      }\n\n      // добавляю элементу каждый класс из массива classes\n      this.classes.forEach((className) => element.classList.add(className));\n\n      // верстка карточки скопирована из index.html\n      element.innerHTML = `\n              <img src=${this.src} alt=${this.alt}>\n              <h3 class=\"menu__item-subtitle\">${this.title}</h3>\n              <div class=\"menu__item-descr\">${this.descr}</div>\n              <div class=\"menu__item-divider\"></div>\n              <div class=\"menu__item-price\">\n                  <div class=\"menu__item-cost\">Цена:</div>\n                  <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\n              </div>\n          `;\n      this.parent.append(element);\n    }\n  }\n\n  // загрузка и отрисовка карточек меню с сервера\n  // getResource(\"http://localhost:3000/menu\").then((data) => {\n  //   data.forEach(({ img, altimg, title, descr, price, parentSelector }) => {\n  //     new MenuCard(img, altimg, title, descr, price, parentSelector).render();\n  //   });\n  // });\n\n  axios.get(\"http://localhost:3000/menu\").then((data) => {\n    data.data.forEach(({ img, altimg, title, descr, price }) => {\n      new MenuCard(\n        img,\n        altimg,\n        title,\n        descr,\n        price,\n        \".menu .container\"\n      ).render();\n    });\n  });\n}\n\nmodule.exports = cards;\n","function forms() {\n  //========================== FORMS\n\n  // элемент формы\n  const forms = document.querySelectorAll(\"form\");\n\n  // объект для хранения сообщений для пользователя\n  const message = {\n    loading: \"img/form/spinner.svg\", // спиннер\n    success: \"Спасибо! Скоро мы с вами свяжемся\",\n    failure: \"Что-то пошло не так...\",\n  };\n\n  // добавляю каждой форме поведение\n  forms.forEach((item) => {\n    bindPostData(item);\n  });\n\n  // отправка данных на сервер\n  const postData = async (url, data) => {\n    let res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: data,\n    });\n\n    return await res.json();\n  };\n\n  // получение данных с сервера\n  async function getResource(url) {\n    let res = await fetch(url);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n    }\n\n    return await res.json();\n  }\n\n  function bindPostData(form) {\n    // обработчик формы\n    form.addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n\n      // элемент для показа пользователю сообщений или спиннера\n      let statusMessage = document.createElement(\"img\");\n      // спиннер\n      statusMessage.textContent = message.loading;\n      // делаю спиннер по центру\n      statusMessage.style.cssText = `\n                display: block;\n                margin: 0 auto;\n            `;\n      // добавляю спиннер после полей формы\n      form.insertAdjacentElement(\"afterend\", statusMessage);\n\n      // объект FormData для отправки на сервер\n      const formData = new FormData(form);\n\n      // альтернативное преобразование FormData в JSON\n      const json = JSON.stringify(Object.fromEntries(formData.entries()));\n\n      // запрос к серверу и обработка ответа\n      postData(\"http://localhost:3000/requests\", json)\n        .then((data) => {\n          console.log(data);\n          showThanksModal(message.success);\n          statusMessage.remove();\n        })\n        .catch(() => {\n          showThanksModal(message.failure);\n        })\n        .finally(() => {\n          form.reset();\n        });\n    });\n  }\n\n  // функция работающая с существующим модальным окном:\n  // скрывает существующий контент в модальном окне и показывает новый\n  function showThanksModal(message) {\n    // элемент с предыдущим контентом\n    const prevModalDialog = document.querySelector(\".modal__dialog\");\n\n    // скрытие предыдущего контента\n    prevModalDialog.classList.add(\"hide\");\n\n    // отображение модального окна\n    openModal();\n\n    // создание элемента для нового контента\n    const thanksModal = document.createElement(\"div\");\n    // добавление классов как у предыдущего контента\n    thanksModal.classList.add(\"modal__dialog\");\n    // новый контент\n    thanksModal.innerHTML = `\n        <div class=\"modal__content\">\n            <div class=\"modal__close\" data-close>×</div>\n            <div class=\"modal__title\">${message}</div>\n        </div>\n    `;\n\n    // добавление модальному окну элемента с новым контентом\n    document.querySelector(\".modal\").append(thanksModal);\n\n    // возвращение формы к прежнему состоянию и ее закрытие через 4 секунды:\n    // элемент с новым контентом удаляется, а старый - будет отображаться при новом открытии формы\n    setTimeout(() => {\n      thanksModal.remove();\n      prevModalDialog.classList.add(\"show\");\n      prevModalDialog.classList.remove(\"hide\");\n      closeModal();\n    }, 4000);\n  }\n}\n\nmodule.exports = forms;\n","function modal() {\n  //================================= MODAL\n\n  // кнопка открытия окна\n  const modalTrigger = document.querySelectorAll(\"[data-modal]\");\n  // модальное окно\n  const modal = document.querySelector(\".modal\");\n\n  // для каждой кнопки добавляем обработчик открытия окна\n  modalTrigger.forEach((btn) => {\n    btn.addEventListener(\"click\", openModal);\n  });\n\n  // функция скрытия модального окна\n  function closeModal() {\n    modal.classList.add(\"hide\");\n    modal.classList.remove(\"show\");\n    // либо вариант с toggle - но тогда назначить класс в верстке\n\n    // восстановление значения overflow по умолчанию\n    document.body.style.overflow = \"\";\n  }\n\n  // функция отображения модального окна\n  function openModal() {\n    modal.classList.add(\"show\");\n    modal.classList.remove(\"hide\");\n    // либо вариант с toggle - но тогда назначить класс в верстке\n\n    // блокировка скролла страницы при открытом модальном окне\n    document.body.style.overflow = \"hidden\";\n\n    // убрать открытиe модалки через заданное время,\n    // если пользователь уже самостоятельно открыл модальное окно\n    clearInterval(modalTimerId);\n  }\n\n  // добавление элементу окна обработчика закрытия окна,\n  // если пользователь нажал на пространство вне окна или на крестик\n  modal.addEventListener(\"click\", (e) => {\n    if (e.target === modal || e.target.getAttribute(\"data-close\") == \"\") {\n      closeModal();\n    }\n  });\n\n  // добавление элементу документа обработчика закрытия окна,\n  // если пользователь нажал клавишу ESC\n  document.addEventListener(\"keydown\", (e) => {\n    if (e.code === \"Escape\" && modal.classList.contains(\"show\")) {\n      closeModal();\n    }\n  });\n\n  // через 30 секунд после открытия автоматически отобразится модальное окно\n  const modalTimerId = setTimeout(openModal, 30000);\n\n  // функция отображающая модальное окно при прокрутке в самый низ страницы\n  function showModalByScroll() {\n    if (\n      window.pageYOffset + document.documentElement.clientHeight >=\n      document.documentElement.scrollHeight\n    ) {\n      openModal();\n      window.removeEventListener(\"scroll\", showModalByScroll);\n    }\n  }\n\n  // обработчик, отображающий модалку при скроллинге\n  window.addEventListener(\"scroll\", showModalByScroll);\n}\n\nmodule.exports = modal;\n","function slider() {\n  //=============================== SLIDER\n\n  // индекс текущего слайда\n  let slideIndex = 1;\n  //\n  let offset = 0;\n\n  // главная обертка-слайдер\n  const slider = document.querySelector(\".offer__slider\");\n  // все изображения для слайдов\n  const slides = document.querySelectorAll(\".offer__slide\");\n  // стрелочка <-\n  const prev = document.querySelector(\".offer__slider-prev\");\n  // стрелочка ->\n  const next = document.querySelector(\".offer__slider-next\");\n  // элемент, отвечающий за общее количество слайдов\n  const total = document.querySelector(\"#total\");\n  // элемент, отвечающий за номер текущего слайда\n  const current = document.querySelector(\"#current\");\n  // обертка-окно для слайдера\n  const slidesWrapper = document.querySelector(\".offer__slider-wrapper\");\n  // ширина обертки-окна слайдера\n  const width = window.getComputedStyle(slidesWrapper).width;\n  // поле, содержащее все слайды\n  const slidesField = document.querySelector(\".offer__slider-inner\");\n\n  // добавляю перед общим количеством слайдов (если меньше 10) и текущим слайдом ноль\n  if (slides.length < 10) {\n    total.textContent = `0${slides.length}`;\n    current.textContent = `0${slideIndex}`;\n  } else {\n    total.textContent = slides.length;\n    current.textContent = `0${slideIndex}`;\n  }\n\n  // всë, в дочерних элементах, что не помещается в ширину обертки-окна,\n  // становится невидимым\n  slidesWrapper.style.overflow = \"hidden\";\n\n  // ширина равна ширине всех вместе взятых слайдов\n  slidesField.style.width = 100 * slides.length + \"%\";\n  // все слайды выстраиваю в горизонтальную линию\n  slidesField.style.display = \"flex\";\n  // анимация сдвигает поле со всеми слайдами\n  slidesField.style.transition = \"0.5s all\";\n\n  // задаем всем слайдам одинаковую ширину\n  slides.forEach((slide) => {\n    slide.style.width = width;\n  });\n\n  // выставляю свойство position в значение relative,\n  // чтобы во внутренних элементах правильно работало position: absolute\n  slider.style.position = \"relative\";\n\n  // блок для индикаторов страниц (точек)\n  const indicators = document.createElement(\"ol\");\n  // массив элементов-точек для удобной работы\n  const dots = [];\n  // добавляю стили на месте (если вдруг нет доступа к файлу CSS)\n  indicators.style.cssText = `\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 15;\n        display: flex;\n        justify-content: center;\n        margin-right: 15%;\n        margin-left: 15%;\n        list-style: none;\n    `;\n  // добавляю индикаторы элементу-слайдеру\n  slider.append(indicators);\n\n  // для каждого слайда создаю индикатор-точку с соотв стилями\n  for (let i = 0; i < slides.length; i++) {\n    const dot = document.createElement(\"li\");\n    dot.setAttribute(\"data-slide-to\", i + 1);\n    dot.style.cssText = `\n        box-sizing: content-box;\n        flex: 0 1 auto;\n        width: 30px;\n        height: 6px;\n        margin-right: 3px;\n        margin-left: 3px;\n        cursor: pointer;\n        background-color: #fff;\n        background-clip: padding-box;\n        border-top: 10px solid transparent;\n        border-bottom: 10px solid transparent;\n        opacity: .5;\n        transition: opacity .6s ease;\n    `;\n    // для первого слайда индикатор делаю более насыщенным\n    if (i == 0) {\n      dot.style.opacity = 1;\n    }\n    // добавляю элемент-точку в родительский блок\n    indicators.append(dot);\n    // добавляю элемент-точку в массив\n    dots.push(dot);\n  }\n\n  // функция для удаления текстовых фрагментов в размерах (5px, 10em,... )\n  function deleteNotDigits(str) {\n    return +str.replace(/\\D/g, \"\");\n  }\n\n  next.addEventListener(\"click\", () => {\n    // (1) если сдвиг максимальный (последний слайд), то обнуляю значение сдвига (слайд 1)\n    // (2) +width.slice(0, width.length - 2) - это числ значение без ед изм (px)\n    if (offset == deleteNotDigits(width) * (slides.length - 1)) {\n      offset = 0;\n    } else {\n      // если нет, то прибавляю еще одну ширину окна у сдвигу (offset)\n      offset += deleteNotDigits(width);\n    }\n\n    // сдвиг поля влево на значение переменной offset\n    slidesField.style.transform = `translateX(-${offset}px)`;\n\n    // --- для переключения счетчика на странице\n    // если индекс равен количеству слайдов, переприсваиваю значение индекса = 1\n    if (slideIndex == slides.length) {\n      slideIndex = 1;\n    } else {\n      slideIndex++;\n    }\n\n    addZero();\n\n    selecDot();\n  });\n\n  prev.addEventListener(\"click\", () => {\n    // если слайд первый, то пререключаю на последний слайд\n    if (offset == 0) {\n      offset = deleteNotDigits(width) * (slides.length - 1);\n    } else {\n      // если нет, то отнимаю одну ширину окна от сдвига\n      offset -= deleteNotDigits(width);\n    }\n\n    // сдвиг поля влево на значение переменной offset\n    slidesField.style.transform = `translateX(-${offset}px)`;\n\n    if (slideIndex == 1) {\n      slideIndex = slides.length;\n    } else {\n      slideIndex--;\n    }\n\n    addZero();\n\n    selecDot();\n  });\n\n  // функция, добавляющая ноль перед номером слайда, если он меньше 10\n  function addZero() {\n    if (slideIndex < 10) {\n      current.textContent = `0${slideIndex}`;\n    } else {\n      current.textContent = slideIndex;\n    }\n  }\n\n  // функция, которая выделяет выбранный слайд\n  function selecDot() {\n    dots.forEach((dot) => (dot.style.opacity = \".5\"));\n    dots[slideIndex - 1].style.opacity = 1;\n  }\n\n  // --- функционал переключения на нужный слайд по клику на точку\n  dots.forEach((dot) => {\n    dot.addEventListener(\"click\", (e) => {\n      // определяю, что выбран именно элемент-точка\n      const slideTo = e.target.getAttribute(\"data-slide-to\");\n\n      // меняю индекс слайда на выбранный с помощью клика на точку\n      slideIndex = slideTo;\n      // меняю сдвиг на нужный до выбранного слайда\n      offset = deleteNotDigits(width) * (slideTo - 1);\n      // сдвигаю поле к нужному слайду\n      slidesField.style.transform = `translateX(-${offset}px)`;\n\n      addZero();\n\n      selecDot();\n    });\n  });\n}\n\nmodule.exports = slider;\n","function tabs() {\n  //================================ TABS\n\n  let tabs = document.querySelectorAll(\".tabheader__item\"),\n    tabsContent = document.querySelectorAll(\".tabcontent\"),\n    tabsParent = document.querySelector(\".tabheader__items\");\n\n  // функция скрывает контент на странице\n  function hideTabContent() {\n    tabsContent.forEach((item) => {\n      item.classList.add(\"hide\");\n      item.classList.remove(\"show\", \"fade\");\n    });\n\n    tabs.forEach((item) => {\n      item.classList.remove(\"tabheader__item_active\");\n    });\n  }\n\n  // функция показывает контент на странице\n  function showTabContent(i = 0) {\n    tabsContent[i].classList.add(\"show\", \"fade\");\n    tabsContent[i].classList.remove(\"hide\");\n    tabs[i].classList.add(\"tabheader__item_active\");\n  }\n\n  hideTabContent();\n  showTabContent();\n\n  // определение нажатого пункта меню и отображение соответствующего ему контента\n  tabsParent.addEventListener(\"click\", function (event) {\n    const target = event.target;\n    if (target && target.classList.contains(\"tabheader__item\")) {\n      tabs.forEach((item, i) => {\n        if (target == item) {\n          hideTabContent();\n          showTabContent(i);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = tabs;\n","function timer() {\n  //================================= TIMER\n\n  // дата завершения таймера\n  const deadline = \"2020-05-11\";\n\n  // функция определяет количество оставшегося времени\n  function getTimeRemaining(endtime) {\n    const t = Date.parse(endtime) - Date.parse(new Date()),\n      days = Math.floor(t / (1000 * 60 * 60 * 24)),\n      seconds = Math.floor((t / 1000) % 60),\n      minutes = Math.floor((t / 1000 / 60) % 60),\n      hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n\n    return {\n      total: t,\n      days: days,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds,\n    };\n  }\n\n  // функция добавляет ноль перед однозначным числом\n  function getZero(num) {\n    if (num >= 0 && num < 10) {\n      return \"0\" + num;\n    } else {\n      return num;\n    }\n  }\n\n  // основная функция, отвечающая за обновление времени\n  function setClock(selector, endtime) {\n    // получаем элементы, отвечающие за значения таймера\n    const timer = document.querySelector(selector),\n      days = timer.querySelector(\"#days\"),\n      hours = timer.querySelector(\"#hours\"),\n      minutes = timer.querySelector(\"#minutes\"),\n      seconds = timer.querySelector(\"#seconds\"),\n      // время обновляется каждую секунду\n      timeInterval = setInterval(updateClock, 1000);\n\n    updateClock();\n\n    // функция присваивает элементу текущее значение времени\n    function updateClock() {\n      const t = getTimeRemaining(endtime);\n\n      days.innerHTML = getZero(t.days);\n      hours.innerHTML = getZero(t.hours);\n      minutes.innerHTML = getZero(t.minutes);\n      seconds.innerHTML = getZero(t.seconds);\n\n      // если время закончилось, очищается интервал обновления времени\n      if (t.total <= 0) {\n        clearInterval(timeInterval);\n      }\n    }\n  }\n\n  setClock(\".timer\", deadline);\n}\n\nmodule.exports = timer;\n","window.addEventListener(\"DOMContentLoaded\", function () {\n  const calc = require(\"./modules/calc\");\n  const cards = require(\"./modules/cards\");\n  const forms = require(\"./modules/forms\");\n  const modal = require(\"./modules/modal\");\n  const slider = require(\"./modules/slider\");\n  const tabs = require(\"./modules/tabs\");\n  const timer = require(\"./modules/timer\");\n\n  calc();\n  cards();\n  forms();\n  modal();\n  slider();\n  tabs();\n  timer();\n});\n"],"sourceRoot":""}